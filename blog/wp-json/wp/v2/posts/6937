{"id":6937,"date":"2024-04-11T11:59:13","date_gmt":"2024-04-11T11:59:13","guid":{"rendered":"https:\/\/www.skillvertex.com\/blog\/?p=6937"},"modified":"2024-04-11T11:59:13","modified_gmt":"2024-04-11T11:59:13","slug":"python-operators","status":"publish","type":"post","link":"https:\/\/www.skillvertex.com\/blog\/python-operators\/","title":{"rendered":"Python Operators"},"content":{"rendered":"\n<div class=\"wp-block-rank-math-toc-block\" id=\"rank-math-toc\" id=\"rank-math-toc\"><p>Table of Contents<\/p><nav><ul><li ><a href=\"#python-operators\">Python Operators<\/a><\/li><li ><a href=\"#what-are-operators-in-python\">What are Operators in Python?<\/a><\/li><li ><a href=\"#types-of-operators-in-python\">Types Of Operators in Python<\/a><\/li><li ><a href=\"#python-arithmetic-operators\">Python Arithmetic Operators<\/a><\/li><li ><a href=\"#python-comparison-operators\">Python Comparison Operators<\/a><\/li><li ><a href=\"#python-assignment-operators\">Python Assignment Operators<\/a><\/li><li ><a href=\"#python-bitwise-operators\">Python Bitwise Operators<\/a><\/li><li ><a href=\"#python-logical-operators\">Python Logical Operators<\/a><\/li><li ><a href=\"#python-membership-operators\">Python Membership Operators<\/a><\/li><li ><a href=\"#python-identity-operators\">Python  Identity Operators<\/a><\/li><li ><a href=\"#python-operators-precedence\">Python Operators Precedence<\/a><\/li><li ><a href=\"#conclusion\">Conclusion<\/a><\/li><li ><a href=\"#python-operators-fa-qs\">Python Operators- FAQs<\/a><\/li><\/ul><\/nav><\/div>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-operators\">Python Operators<\/h2>\n\n\n\n<p>In Python Programming, operators in general functions will perform operations on values and variables. These operators are considered as the standard symbol which functions for logical and arithmetic operations. <\/p>\n\n\n\n<p>Let us check out this article to learn more about the different types of <a href=\"https:\/\/www.skillvertex.com\/blog\/python-syntax\/\" data-type=\"post\" data-id=\"6924\">Python<\/a> Operators.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"what-are-operators-in-python\">What are Operators in Python?<\/h2>\n\n\n\n<p>Python and several programming languages have different types of operators which are the symbol and even referred to as<a href=\"https:\/\/www.skillvertex.com\/blog\/generics-keyword-in-c\/\" data-type=\"post\" data-id=\"3708\"> keywords<\/a>. They will do operations on one or more operands. <\/p>\n\n\n\n<p>These operators will offer different operations such as addition, subtraction, multiplication, and division.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"types-of-operators-in-python\">Types Of Operators in Python<\/h2>\n\n\n\n<p>a. Arithmetic Operator<\/p>\n\n\n\n<p>b. Comparison Operator<\/p>\n\n\n\n<p>c. Assignment Operator<\/p>\n\n\n\n<p>d. Logical Operator<\/p>\n\n\n\n<p>e. Bitwise Operators<\/p>\n\n\n\n<p>f. Membership Operators<\/p>\n\n\n\n<p>g. Identity Operators<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-arithmetic-operators\">Python Arithmetic Operators<\/h2>\n\n\n\n<p><a href=\"https:\/\/www.skillvertex.com\/blog\/character-arithmetic-in-c-and-c\/\" data-type=\"post\" data-id=\"1876\">Arithmetic Operators<\/a> mainly <a href=\"https:\/\/www.skillvertex.com\/blog\/c-library-math-h-functions\/\" data-type=\"post\" data-id=\"2596\">function <\/a>to do basic mathematical operations. Hence, the variable will have 10 and the variable b has 20.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th><em>Operator<\/em><\/th><th><em>Name<\/em><\/th><th><em>Example<\/em><\/th><\/tr><tr><td>+<\/td><td>Addition<\/td><td>a + b = 30<\/td><\/tr><tr><td>&#8211;<\/td><td>Subtraction<\/td><td>a \u2013 b = -10<\/td><\/tr><tr><td>*<\/td><td>Multiplication<\/td><td>a * b = 200<\/td><\/tr><tr><td>\/<\/td><td>Division<\/td><td>b \/ a = 2<\/td><\/tr><tr><td>%<\/td><td>Modulus<\/td><td>b % a = 0<\/td><\/tr><tr><td>**<\/td><td>Exponent<\/td><td>a**b =10**20<\/td><\/tr><tr><td>\/\/<\/td><td>Floor Division<\/td><td>9\/\/2 = 4<\/td><\/tr><\/tbody><\/table><figcaption class=\"wp-element-caption\"> <\/figcaption><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-comparison-operators\">Python Comparison Operators<\/h2>\n\n\n\n<p>These operators have values on either side of them and can analyze the relation between them. These are also known as Relational Operators.<\/p>\n\n\n\n<p>Suppose variable a has 10 and variable b has 20<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator<\/th><th>Name<\/th><th>Example<\/th><\/tr><tr><td>==<\/td><td>Equal<\/td><td>(a == b) is not true.<\/td><\/tr><tr><td>!=<\/td><td>Not equal<\/td><td>(a != b) is true.<\/td><\/tr><tr><td>&gt;<\/td><td>Greater than<\/td><td>(a &gt; b) is not true.<\/td><\/tr><tr><td>&lt;<\/td><td>Less than<\/td><td>(a &lt; b) is true.<\/td><\/tr><tr><td>&gt;=<\/td><td>Greater than or equal to<\/td><td>(a &gt;= b) is not true.<\/td><\/tr><tr><td>&lt;=<\/td><td>Less than or equal to<\/td><td>(a &lt;= b) is true.<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-assignment-operators\">Python Assignment Operators<\/h2>\n\n\n\n<p>Assignment operators will provide values to several <a href=\"https:\/\/www.skillvertex.com\/blog\/python-variables\/\" data-type=\"post\" data-id=\"6932\">variables<\/a>. Python assignment operators table is provided below<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th><em>Operator<\/em><\/th><th><em>Example<\/em><\/th><th><em>Same As<\/em><\/th><\/tr><tr><td>=<\/td><td>a = 10<\/td><td>a = 10<\/td><\/tr><tr><td>+=<\/td><td>a += 30<\/td><td>a = a + 30<\/td><\/tr><tr><td>-=<\/td><td>a -= 15<\/td><td>a = a &#8211; 15<\/td><\/tr><tr><td>*=<\/td><td>a *= 10<\/td><td>a = a * 10<\/td><\/tr><tr><td>\/=<\/td><td>a \/= 5<\/td><td>a = a \/ 5<\/td><\/tr><tr><td>%=<\/td><td>a %= 5<\/td><td>a = a % 5<\/td><\/tr><tr><td>**=<\/td><td>a **= 4<\/td><td>a = a ** 4<\/td><\/tr><tr><td>\/\/=<\/td><td>a \/\/= 5<\/td><td>a = a \/\/ 5<\/td><\/tr><tr><td>&amp;=<\/td><td>a &amp;= 5<\/td><td>a = a &amp; 5<\/td><\/tr><tr><td>|=<\/td><td>a |= 5<\/td><td>a = a | 5<\/td><\/tr><tr><td>^=<\/td><td>a ^= 5<\/td><td>a = a ^ 5<\/td><\/tr><tr><td>&gt;&gt;=<\/td><td>a &gt;&gt;= 5<\/td><td>a = a &gt;&gt; 5<\/td><\/tr><tr><td>&lt;&lt;=<\/td><td>a &lt;&lt;= 5<\/td><td>a = a &lt;&lt; 5<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-bitwise-operators\">Python Bitwise Operators<\/h2>\n\n\n\n<p>Bitwise Operator will perform on bits and functions bit by bit operations. Moreover, these operations will compare binary numbers.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator<\/th><th>Name<\/th><th>Example<\/th><\/tr><tr><td>&amp;<\/td><td>AND<\/td><td>a &amp; b<\/td><\/tr><tr><td>|<\/td><td>OR<\/td><td>a | b<\/td><\/tr><tr><td>^<\/td><td>XOR<\/td><td>a ^ b<\/td><\/tr><tr><td>~<\/td><td>NOT<\/td><td>~a<\/td><\/tr><tr><td>&lt;&lt;<\/td><td>Zero fill left shift<\/td><td>a &lt;&lt; 3<\/td><\/tr><tr><td>&gt;&gt;<\/td><td>Signed right shift<\/td><td>a &gt;&gt; 3<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-logical-operators\">Python Logical Operators<\/h2>\n\n\n\n<p>These operators will further compile more than 2 conditions and monitor the final result. The logical operators which are provided here will support the Python language.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator<\/th><th>Name<\/th><th>Example<\/th><\/tr><tr><td>and<\/td><td>AND<\/td><td>a and b<\/td><\/tr><tr><td>or<\/td><td>OR<\/td><td>a or b<\/td><\/tr><tr><td>not<\/td><td>NOT<\/td><td>not(a)<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-membership-operators\">Python Membership Operators<\/h2>\n\n\n\n<p>These operators will test for membership in a sequence like the strings, lists, or tuples. <\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator<\/th><th>Description<\/th><th>Example<\/th><\/tr><tr><td>in<\/td><td>Returns True if it finds a variable in the specified sequence, false otherwise.<\/td><td>a in b<\/td><\/tr><tr><td>not in<\/td><td>an in b<\/td><td>a not in b<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-identity-operators\">Python  Identity Operators<\/h2>\n\n\n\n<p>Identity operators will compare the memory locations of two objects. Those identity operators are given below<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Operator<\/th><th>Description<\/th><th>Example<\/th><\/tr><tr><td>is<\/td><td>Returns True if both variables are the same object and false otherwise.<\/td><td>a is b<\/td><\/tr><tr><td>is not<\/td><td>Returns True if both variables are not the same object and false otherwise.<\/td><td>a is not b<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-operators-precedence\">Python Operators Precedence<\/h2>\n\n\n\n<p>The table below has operators from the highest precedence to the lowest.<\/p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><th>Sr.No.<\/th><th>Operator &amp; Description<\/th><\/tr><tr><td>1<\/td><td><strong>**<\/strong>Exponentiation (raise to the power)<\/td><\/tr><tr><td>2<\/td><td><strong>~ + &#8211;<\/strong>Complement, unary plus and minus (method names for the last two are +@ and -@)<\/td><\/tr><tr><td>3<\/td><td><strong>* \/ % \/\/<\/strong>Multiply, divide, modulo and floor division<\/td><\/tr><tr><td>4<\/td><td><strong>+ &#8211;<\/strong>Addition and subtraction<\/td><\/tr><tr><td>5<\/td><td><strong>&gt;&gt; &lt;&lt;<\/strong>Right and left bitwise shift<\/td><\/tr><tr><td>6<\/td><td><strong>&amp;<\/strong>Bitwise &#8216;AND&#8217;<\/td><\/tr><tr><td>7<\/td><td><strong>^ |<\/strong>Bitwise exclusive `OR&#8217; and regular `OR&#8217;<\/td><\/tr><tr><td>8<\/td><td><strong>&lt;= &lt; &gt; &gt;=<\/strong>Comparison operators<\/td><\/tr><tr><td>9<\/td><td><strong>&lt;&gt; == !=<\/strong>Equality operators<\/td><\/tr><tr><td>10<\/td><td><strong>= %= \/= \/\/= -= += *= **=<\/strong>Assignment operators<\/td><\/tr><tr><td>11<\/td><td><strong>is is not<\/strong>Identity operators<\/td><\/tr><tr><td>12<\/td><td><strong>in not in<\/strong>Membership operators<\/td><\/tr><tr><td>13<\/td><td><strong>not or and<\/strong>Logical operators<\/td><\/tr><\/tbody><\/table><\/figure>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"conclusion\">Conclusion<\/h2>\n\n\n\n<p>To conclude, this article will educate us on the different types of Python operators. Python Arithmetic Operators, Python Bitwise operators, Python Logical operators, and several other operators are included in this. <\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"python-operators-fa-qs\">Python Operators- FAQs<\/h2>\n\n\n<div id=\"rank-math-faq\" class=\"rank-math-block\">\n<div class=\"rank-math-list \">\n<div id=\"faq-question-1707201362682\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q1. What is the in operator in Python?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. The in-operator\u00a0will monitor if a value is in a collection of values<\/p>\n\n<\/div>\n<\/div>\n<div id=\"faq-question-1707201370646\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q2.  What is init in Python?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. It is considered a special method for the initialization of the object. <\/p>\n\n<\/div>\n<\/div>\n<div id=\"faq-question-1707201379755\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q3. What is str in Python?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. Python consists of a <strong>built-in string class<\/strong>\u00a0referred to as &#8220;str&#8221; with many handy features . String literals will be enclosed by either double or single quotes.<\/p>\n\n<\/div>\n<\/div>\n<\/div>\n<\/div>","protected":false},"excerpt":{"rendered":"<p>Python Operators In Python Programming, operators in general functions will perform operations on values and variables. These operators are considered as the standard symbol which functions for logical and arithmetic operations. Let us check out this article to learn more about the different types of Python Operators. What are Operators in Python? Python and several &#8230; <a title=\"Python Operators\" class=\"read-more\" href=\"https:\/\/www.skillvertex.com\/blog\/python-operators\/\" aria-label=\"More on Python Operators\">Read more<\/a><\/p>\n","protected":false},"author":4,"featured_media":6939,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[864],"tags":[882],"class_list":["post-6937","post","type-post","status-publish","format-standard","has-post-thumbnail","hentry","category-python-tutorial","tag-python-operators","generate-columns","tablet-grid-50","mobile-grid-100","grid-parent","grid-33"],"_links":{"self":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/6937"}],"collection":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/comments?post=6937"}],"version-history":[{"count":7,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/6937\/revisions"}],"predecessor-version":[{"id":8896,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/6937\/revisions\/8896"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/media\/6939"}],"wp:attachment":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/media?parent=6937"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/categories?post=6937"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/tags?post=6937"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}