{"id":2262,"date":"2024-05-10T07:17:04","date_gmt":"2024-05-10T07:17:04","guid":{"rendered":"https:\/\/www.skillvertex.com\/blog\/?p=2262"},"modified":"2024-05-10T07:17:04","modified_gmt":"2024-05-10T07:17:04","slug":"conditional-or-ternary-operator-in-c","status":"publish","type":"post","link":"https:\/\/www.skillvertex.com\/blog\/conditional-or-ternary-operator-in-c\/","title":{"rendered":"Conditional or Ternary Operator (?:) In C"},"content":{"rendered":"\n<div class=\"wp-block-rank-math-toc-block\" id=\"rank-math-toc\" id=\"rank-math-toc\"><p>Table of Contents<\/p><nav><ul><li ><a href=\"#conditional-or-ternary-operator-in-c\">Conditional or Ternary Operator (?:) In C<\/a><\/li><li ><a href=\"#syntax-of-conditional-ternary-operator-in-c\">Syntax of Conditional\/Ternary Operator in C<\/a><\/li><li ><a href=\"#working-as-conditional-ternary-operator-in-c\">Working as Conditional\/Ternary Operator in C<\/a><\/li><li ><a href=\"#examples-of-c-ternary-operator\">Examples of C  Ternary Operator<\/a><\/li><li ><a href=\"#faq-conditional-or-ternary-operator-in-c\">FAQ- Conditional or Ternary Operator (?:) in C<\/a><\/li><\/ul><\/nav><\/div>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"conditional-or-ternary-operator-in-c\">Conditional or Ternary Operator (?:) In C<\/h2>\n\n\n\n<p>The conditional operator, often referred to as the ternary operator due to its use of three operands, is a fundamental feature in the C programming language. This operator provides a concise and efficient way to make decisions based on conditional expressions, allowing programmers to write compact and readable code. By utilizing the <code>? :<\/code> syntax, it enables the selection of one of two values or expressions based on a specified condition. This versatility makes the conditional operator a valuable tool for streamlining conditional statements and enhancing code readability in C programs. In this article, we&#8217;ll explore the syntax, usage, and benefits of the conditional operator, demonstrating how it simplifies decision-making processes within C code.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"syntax-of-conditional-ternary-operator-in-c\">Syntax of Conditional\/Ternary Operator in C<\/h2>\n\n\n\n<pre class=\"wp-block-code\"><code>variable = Expression1 ? Expression2 : Expression3;\n<\/code><\/pre>\n\n\n\n<p>Or Syntax can also written as<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>variable = (condition) ? Expression2 : Expression3;\n<\/code><\/pre>\n\n\n\n<p>Another way to write syntax<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>(condition) ? (variable = Expression2) : (variable = Expression3);\n<\/code><\/pre>\n\n\n\n<p>It can be visualized into an if-else statement as:&nbsp;<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>if(Expression1)\n{\n    variable = Expression2;\n}\nelse\n{\n    variable = Expression3;\n}<\/code><\/pre>\n\n\n\n<p>Ternary operators can even take three operands to work. Hence, it is called Ternary operator.<\/p>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"working-as-conditional-ternary-operator-in-c\">Working as Conditional\/Ternary Operator in C<\/h2>\n\n\n\n<ol class=\"wp-block-list\">\n<li>It checks a condition (Expression1).<\/li>\n\n\n\n<li>If the condition is true, it executes Expression2.<\/li>\n\n\n\n<li>If the condition is false, it executes Expression3.<\/li>\n\n\n\n<li>Finally, it returns the result of either Expression2 or Expression3, depending on whether the condition was true or false.<\/li>\n<\/ol>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"examples-of-c-ternary-operator\">Examples of C  Ternary Operator<\/h2>\n\n\n\n<h4 class=\"wp-block-heading\">Example 1:&nbsp;C Program to Store the greatest of the two Numbers using the ternary operator<\/h4>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ C program to find largest among two\n\/\/ numbers using ternary operator\n  \n#include &lt;stdio.h&gt;\n  \nint main()\n{\n    int m = 5, n = 4;\n  \n    (m &gt; n) ? printf(\"m is greater than n that is %d &gt; %d\",\n                     m, n)\n            : printf(\"n is greater than m that is %d &gt; %d\",\n                     n, m);\n  \n    return 0;\n}<\/code><\/pre>\n\n\n\n<p>Output<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>m is greater than n that is 5 &gt; 4\n<\/code><\/pre>\n\n\n\n<h4 class=\"wp-block-heading\"><strong>Example 2:<\/strong>&nbsp;C Program to check whether a year is a leap year using ternary operator<\/h4>\n\n\n\n<pre class=\"wp-block-code\"><code>\/\/ C program to check whether a year is leap year or not\n\/\/ using ternary operator\n  \n#include &lt;stdio.h&gt;\n  \nint main()\n{\n    int yr = 1900;\n  \n    (yr%4==0) ? (yr%100!=0? printf(\"The year %d is a leap year\",yr)\n     : (yr%400==0 ? printf(\"The year %d is a leap year\",yr)\n         : printf(\"The year %d is not a leap year\",yr)))\n             : printf(\"The year %d is not a leap year\",yr);\n    return 0;\n}<\/code><\/pre>\n\n\n\n<p>Output<\/p>\n\n\n\n<pre class=\"wp-block-code\"><code>The year 1900 is not a leap year\n<\/code><\/pre>\n\n\n\n<h2 class=\"wp-block-heading\" id=\"faq-conditional-or-ternary-operator-in-c\">FAQ- Conditional or Ternary Operator (?:) in C<\/h2>\n\n\n<div id=\"rank-math-faq\" class=\"rank-math-block\">\n<div class=\"rank-math-list \">\n<div id=\"faq-question-1696323858122\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q1. What is ternary operators or conditional operators in C?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. The ternary operator in C, also called the Conditional Operator, works with three values. It&#8217;s used to make conditional code shorter, compared to using if-else statements.<\/p>\n\n<\/div>\n<\/div>\n<div id=\"faq-question-1696323863726\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q2. What is the difference between a conditional statement and a ternary operator?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. Ternary operators are faster and more concise than if-else blocks. They&#8217;re single statements and can be used where if-else isn&#8217;t suitable, offering improved readability for simple conditionals.<\/p>\n\n<\/div>\n<\/div>\n<div id=\"faq-question-1696323875609\" class=\"rank-math-list-item\">\n<h4 class=\"rank-math-question \">Q3. Why is it called a ternary operator?<\/h4>\n<div class=\"rank-math-answer \">\n\n<p>Ans. &#8220;Ternary&#8221; refers to things composed of three items. The ternary operator aligns with this definition, comprising a conditional, a value for true, and a value for false.<\/p>\n\n<\/div>\n<\/div>\n<\/div>\n<\/div>","protected":false},"excerpt":{"rendered":"<p>Conditional or Ternary Operator (?:) In C The conditional operator, often referred to as the ternary operator due to its use of three operands, is a fundamental feature in the C programming language. This operator provides a concise and efficient way to make decisions based on conditional expressions, allowing programmers to write compact and readable &#8230; <a title=\"Conditional or Ternary Operator (?:) In C\" class=\"read-more\" href=\"https:\/\/www.skillvertex.com\/blog\/conditional-or-ternary-operator-in-c\/\" aria-label=\"More on Conditional or Ternary Operator (?:) In C\">Read more<\/a><\/p>\n","protected":false},"author":4,"featured_media":2263,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[27],"tags":[403],"class_list":["post-2262","post","type-post","status-publish","format-standard","has-post-thumbnail","hentry","category-c-programming","tag-conditional-or-ternary-operator-in-c","generate-columns","tablet-grid-50","mobile-grid-100","grid-parent","grid-33"],"_links":{"self":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/2262"}],"collection":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/users\/4"}],"replies":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/comments?post=2262"}],"version-history":[{"count":9,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/2262\/revisions"}],"predecessor-version":[{"id":10643,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/posts\/2262\/revisions\/10643"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/media\/2263"}],"wp:attachment":[{"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/media?parent=2262"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/categories?post=2262"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.skillvertex.com\/blog\/wp-json\/wp\/v2\/tags?post=2262"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}